$ objdump -M intel -d stack4

stack4:     file format elf32-i386


Disassembly of section .init:

080482bc <_init>:
 80482bc:	55                   	push   ebp
 80482bd:	89 e5                	mov    ebp,esp
 80482bf:	53                   	push   ebx
 80482c0:	83 ec 04             	sub    esp,0x4
 80482c3:	e8 00 00 00 00       	call   80482c8 <_init+0xc>
 80482c8:	5b                   	pop    ebx
 80482c9:	81 c3 24 13 00 00    	add    ebx,0x1324
 80482cf:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 80482d5:	85 d2                	test   edx,edx
 80482d7:	74 05                	je     80482de <_init+0x22>
 80482d9:	e8 1e 00 00 00       	call   80482fc <__gmon_start__@plt>
 80482de:	e8 ed 00 00 00       	call   80483d0 <frame_dummy>
 80482e3:	e8 a8 01 00 00       	call   8048490 <__do_global_ctors_aux>
 80482e8:	58                   	pop    eax
 80482e9:	5b                   	pop    ebx
 80482ea:	c9                   	leave  
 80482eb:	c3                   	ret    

Disassembly of section .plt:

080482ec <__gmon_start__@plt-0x10>:
 80482ec:	ff 35 f0 95 04 08    	push   DWORD PTR ds:0x80495f0
 80482f2:	ff 25 f4 95 04 08    	jmp    DWORD PTR ds:0x80495f4
 80482f8:	00 00                	add    BYTE PTR [eax],al
	...

080482fc <__gmon_start__@plt>:
 80482fc:	ff 25 f8 95 04 08    	jmp    DWORD PTR ds:0x80495f8
 8048302:	68 00 00 00 00       	push   0x0
 8048307:	e9 e0 ff ff ff       	jmp    80482ec <_init+0x30>

0804830c <gets@plt>:
 804830c:	ff 25 fc 95 04 08    	jmp    DWORD PTR ds:0x80495fc
 8048312:	68 08 00 00 00       	push   0x8
 8048317:	e9 d0 ff ff ff       	jmp    80482ec <_init+0x30>

0804831c <__libc_start_main@plt>:
 804831c:	ff 25 00 96 04 08    	jmp    DWORD PTR ds:0x8049600
 8048322:	68 10 00 00 00       	push   0x10
 8048327:	e9 c0 ff ff ff       	jmp    80482ec <_init+0x30>

0804832c <puts@plt>:
 804832c:	ff 25 04 96 04 08    	jmp    DWORD PTR ds:0x8049604
 8048332:	68 18 00 00 00       	push   0x18
 8048337:	e9 b0 ff ff ff       	jmp    80482ec <_init+0x30>

Disassembly of section .text:

08048340 <_start>:
 8048340:	31 ed                	xor    ebp,ebp
 8048342:	5e                   	pop    esi
 8048343:	89 e1                	mov    ecx,esp
 8048345:	83 e4 f0             	and    esp,0xfffffff0
 8048348:	50                   	push   eax
 8048349:	54                   	push   esp
 804834a:	52                   	push   edx
 804834b:	68 20 84 04 08       	push   0x8048420
 8048350:	68 30 84 04 08       	push   0x8048430
 8048355:	51                   	push   ecx
 8048356:	56                   	push   esi
 8048357:	68 08 84 04 08       	push   0x8048408
 804835c:	e8 bb ff ff ff       	call   804831c <__libc_start_main@plt>
 8048361:	f4                   	hlt    
 8048362:	90                   	nop
 8048363:	90                   	nop
 8048364:	90                   	nop
 8048365:	90                   	nop
 8048366:	90                   	nop
 8048367:	90                   	nop
 8048368:	90                   	nop
 8048369:	90                   	nop
 804836a:	90                   	nop
 804836b:	90                   	nop
 804836c:	90                   	nop
 804836d:	90                   	nop
 804836e:	90                   	nop
 804836f:	90                   	nop

08048370 <__do_global_dtors_aux>:
 8048370:	55                   	push   ebp
 8048371:	89 e5                	mov    ebp,esp
 8048373:	53                   	push   ebx
 8048374:	83 ec 04             	sub    esp,0x4
 8048377:	80 3d 10 96 04 08 00 	cmp    BYTE PTR ds:0x8049610,0x0
 804837e:	75 3f                	jne    80483bf <__do_global_dtors_aux+0x4f>
 8048380:	a1 14 96 04 08       	mov    eax,ds:0x8049614
 8048385:	bb 10 95 04 08       	mov    ebx,0x8049510
 804838a:	81 eb 0c 95 04 08    	sub    ebx,0x804950c
 8048390:	c1 fb 02             	sar    ebx,0x2
 8048393:	83 eb 01             	sub    ebx,0x1
 8048396:	39 d8                	cmp    eax,ebx
 8048398:	73 1e                	jae    80483b8 <__do_global_dtors_aux+0x48>
 804839a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80483a0:	83 c0 01             	add    eax,0x1
 80483a3:	a3 14 96 04 08       	mov    ds:0x8049614,eax
 80483a8:	ff 14 85 0c 95 04 08 	call   DWORD PTR [eax*4+0x804950c]
 80483af:	a1 14 96 04 08       	mov    eax,ds:0x8049614
 80483b4:	39 d8                	cmp    eax,ebx
 80483b6:	72 e8                	jb     80483a0 <__do_global_dtors_aux+0x30>
 80483b8:	c6 05 10 96 04 08 01 	mov    BYTE PTR ds:0x8049610,0x1
 80483bf:	83 c4 04             	add    esp,0x4
 80483c2:	5b                   	pop    ebx
 80483c3:	5d                   	pop    ebp
 80483c4:	c3                   	ret    
 80483c5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80483c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483d0 <frame_dummy>:
 80483d0:	55                   	push   ebp
 80483d1:	89 e5                	mov    ebp,esp
 80483d3:	83 ec 18             	sub    esp,0x18
 80483d6:	a1 14 95 04 08       	mov    eax,ds:0x8049514
 80483db:	85 c0                	test   eax,eax
 80483dd:	74 12                	je     80483f1 <frame_dummy+0x21>
 80483df:	b8 00 00 00 00       	mov    eax,0x0
 80483e4:	85 c0                	test   eax,eax
 80483e6:	74 09                	je     80483f1 <frame_dummy+0x21>
 80483e8:	c7 04 24 14 95 04 08 	mov    DWORD PTR [esp],0x8049514
 80483ef:	ff d0                	call   eax
 80483f1:	c9                   	leave  
 80483f2:	c3                   	ret    
 80483f3:	90                   	nop

080483f4 <win>:
 80483f4:	55                   	push   ebp
 80483f5:	89 e5                	mov    ebp,esp
 80483f7:	83 ec 18             	sub    esp,0x18
 80483fa:	c7 04 24 e0 84 04 08 	mov    DWORD PTR [esp],0x80484e0
 8048401:	e8 26 ff ff ff       	call   804832c <puts@plt>
 8048406:	c9                   	leave  
 8048407:	c3                   	ret    

08048408 <main>:
 8048408:	55                   	push   ebp
 8048409:	89 e5                	mov    ebp,esp
 804840b:	83 e4 f0             	and    esp,0xfffffff0
 804840e:	83 ec 50             	sub    esp,0x50
 8048411:	8d 44 24 10          	lea    eax,[esp+0x10]
 8048415:	89 04 24             	mov    DWORD PTR [esp],eax
 8048418:	e8 ef fe ff ff       	call   804830c <gets@plt>
 804841d:	c9                   	leave  
 804841e:	c3                   	ret    
 804841f:	90                   	nop

08048420 <__libc_csu_fini>:
 8048420:	55                   	push   ebp
 8048421:	89 e5                	mov    ebp,esp
 8048423:	5d                   	pop    ebp
 8048424:	c3                   	ret    
 8048425:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048429:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048430 <__libc_csu_init>:
 8048430:	55                   	push   ebp
 8048431:	89 e5                	mov    ebp,esp
 8048433:	57                   	push   edi
 8048434:	56                   	push   esi
 8048435:	53                   	push   ebx
 8048436:	e8 4f 00 00 00       	call   804848a <__i686.get_pc_thunk.bx>
 804843b:	81 c3 b1 11 00 00    	add    ebx,0x11b1
 8048441:	83 ec 1c             	sub    esp,0x1c
 8048444:	e8 73 fe ff ff       	call   80482bc <_init>
 8048449:	8d bb 18 ff ff ff    	lea    edi,[ebx-0xe8]
 804844f:	8d 83 18 ff ff ff    	lea    eax,[ebx-0xe8]
 8048455:	29 c7                	sub    edi,eax
 8048457:	c1 ff 02             	sar    edi,0x2
 804845a:	85 ff                	test   edi,edi
 804845c:	74 24                	je     8048482 <__libc_csu_init+0x52>
 804845e:	31 f6                	xor    esi,esi
 8048460:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048463:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048467:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804846a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804846e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048471:	89 04 24             	mov    DWORD PTR [esp],eax
 8048474:	ff 94 b3 18 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe8]
 804847b:	83 c6 01             	add    esi,0x1
 804847e:	39 fe                	cmp    esi,edi
 8048480:	72 de                	jb     8048460 <__libc_csu_init+0x30>
 8048482:	83 c4 1c             	add    esp,0x1c
 8048485:	5b                   	pop    ebx
 8048486:	5e                   	pop    esi
 8048487:	5f                   	pop    edi
 8048488:	5d                   	pop    ebp
 8048489:	c3                   	ret    

0804848a <__i686.get_pc_thunk.bx>:
 804848a:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 804848d:	c3                   	ret    
 804848e:	90                   	nop
 804848f:	90                   	nop

08048490 <__do_global_ctors_aux>:
 8048490:	55                   	push   ebp
 8048491:	89 e5                	mov    ebp,esp
 8048493:	53                   	push   ebx
 8048494:	83 ec 04             	sub    esp,0x4
 8048497:	a1 04 95 04 08       	mov    eax,ds:0x8049504
 804849c:	83 f8 ff             	cmp    eax,0xffffffff
 804849f:	74 13                	je     80484b4 <__do_global_ctors_aux+0x24>
 80484a1:	bb 04 95 04 08       	mov    ebx,0x8049504
 80484a6:	66 90                	xchg   ax,ax
 80484a8:	83 eb 04             	sub    ebx,0x4
 80484ab:	ff d0                	call   eax
 80484ad:	8b 03                	mov    eax,DWORD PTR [ebx]
 80484af:	83 f8 ff             	cmp    eax,0xffffffff
 80484b2:	75 f4                	jne    80484a8 <__do_global_ctors_aux+0x18>
 80484b4:	83 c4 04             	add    esp,0x4
 80484b7:	5b                   	pop    ebx
 80484b8:	5d                   	pop    ebp
 80484b9:	c3                   	ret    
 80484ba:	90                   	nop
 80484bb:	90                   	nop

Disassembly of section .fini:

080484bc <_fini>:
 80484bc:	55                   	push   ebp
 80484bd:	89 e5                	mov    ebp,esp
 80484bf:	53                   	push   ebx
 80484c0:	83 ec 04             	sub    esp,0x4
 80484c3:	e8 00 00 00 00       	call   80484c8 <_fini+0xc>
 80484c8:	5b                   	pop    ebx
 80484c9:	81 c3 24 11 00 00    	add    ebx,0x1124
 80484cf:	e8 9c fe ff ff       	call   8048370 <__do_global_dtors_aux>
 80484d4:	59                   	pop    ecx
 80484d5:	5b                   	pop    ebx
 80484d6:	c9                   	leave  
 80484d7:	c3                   	ret    
